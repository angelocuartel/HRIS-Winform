<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="successPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>